apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.achievers"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true

            buildConfigField("String", "BASE_URL", '"http://ip_here"')
            buildConfigField("String", "API_VERSION", '"v1"')
        }

        release {
            minifyEnabled true
            useProguard true

            buildConfigField("String", "BASE_URL", '"http://ip_here"')
            buildConfigField("String", "API_VERSION", '"v1"')

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
//        execution 'ANDROID_TEST_ORCHESTRATOR'
    }

    dataBinding {
        enabled = true
    }
}

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    // App's dependencies, including test
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:palette-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:exifinterface:$rootProject.supportLibraryVersion"

    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:3.0.1"

    // tests
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation "org.mockito:mockito-core:2.7.19"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestUtil 'com.android.support.test:orchestrator:1.0.1'

    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:3.0.1"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:3.0.1"

    // tests
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.7.19"

    testImplementation "org.robolectric:robolectric:3.5.1"
    testImplementation "org.robolectric:shadows-supportv4:3.5.1"

    testCompile 'com.github.gmazzo:okhttp-mock:1.0.3'

    // Room
    implementation "android.arch.persistence.room:runtime:1.0.0"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:design:$rootProject.supportLibraryVersion"

    // GSON
    implementation "com.google.code.gson:gson:${gsonVersion}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"

    // Stetho
    implementation "com.facebook.stetho:stetho:${stethoVersion}"
    implementation "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"

    // Faker
    implementation "com.github.blocoio:faker:${fakerVersion}"

    // Fresco
    implementation "com.facebook.fresco:fresco:${frescoVersion}"
    implementation "com.facebook.fresco:imagepipeline-okhttp3:${frescoVersion}"
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    // DialogPlus
    implementation 'com.orhanobut:dialogplus:1.11@aar'

    // Parceler
    implementation "org.parceler:parceler-api:${parcelerVersion}"
    annotationProcessor "org.parceler:parceler:${parcelerVersion}"

    implementation 'com.google.android.exoplayer:exoplayer:r2.2.0'

    // apache commons
    implementation 'commons-io:commons-io:2.6'
}